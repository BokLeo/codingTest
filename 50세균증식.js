/*
- 문제 설명
어떤 세균은 1시간에 두배만큼 증식한다고 합니다. 처음 세균의 마리수 n과 경과한 시간 t가 매개변수로 주어질 때 t시간 후 세균의 수를 return하도록 solution 함수를 완성해주세요.

- 제한사항
1 ≤ n ≤ 10
1 ≤ t ≤ 15

- 입출력 예
n	t	result
2	10	2048
7	15	229,376

- 입출력 예 설명
입출력 예 #1
처음엔 2마리, 1시간 후엔 4마리, 2시간 후엔 8마리, ..., 10시간 후엔 2048마리가 됩니다. 따라서 2048을 return합니다.

입출력 예 #2
처음엔 7마리, 1시간 후엔 14마리, 2시간 후엔 28마리, ..., 15시간 후엔 229376마리가 됩니다. 따라서 229,376을 return합니다.

*/

function solution(n, t) {
	return n * 2 ** t
}

console.log(solution(2, 10)) // => 2048


// js에서 제곱근을 만드는 방법
/**
 * 1. 거듭제곱 연산자 (**)
 * > const square = 3 ** 2; // 3^2
 * 
 * 2. Math.pow() 함수
 * > const square = Math.pow(3, 2); // 3^2
 * 
 * 번외. 제곱근(sqrt)
 * > const squareRoot = Math.sqrt(9); // √9 === 3
 * 
 * 🤔 이런 방법도 있네..
 * 	n << t;
 * 
 * 	1. 비트 연산자 << (Left Shift)의 동작 원리
		n << t는 숫자 n의 2진수 비트 표현을 왼쪽으로 t번 이동시키는 연산입니다.
		왼쪽으로 비트를 이동하면 각 이동마다 숫자가 2배가 됩니다.

		예:
		n = 2, t = 1일 때

		코드 복사
		2의 이진수: 00000010
		왼쪽으로 1번 이동: 00000100 → 4 (2 * 2)
		n = 2, t = 2일 때

		코드 복사
		2의 이진수: 00000010
		왼쪽으로 2번 이동: 00001000 → 8 (2 * 2 * 2)

 * 
 */
